// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test the App component matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(App)
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "buyChips": [Function],
      "buyInsuranceOnClick": [Function],
      "clearHands": [Function],
      "dealOnClick": [Function],
      "dealer": Object {
        "avatar": "./images/dealer.png",
        "busted": false,
        "hand": Array [],
        "handFlipped": false,
        "hasBlackjack": false,
        "name": "Dealer",
        "score": 0,
      },
      "dealerTurn": [Function],
      "deck": Object {
        "deck": Array [],
        "drawnCard": null,
      },
      "doubleDownOnClick": [Function],
      "giveCard": [Function],
      "giveDealerCard": [Function],
      "hitOnClick": [Function],
      "keepDealing": [Function],
      "nextHand": [Function],
      "nextPlayer": [Function],
      "play": [Function],
      "player": Object {
        "avatar": "./images/default.png",
        "balance": 500,
        "busted": Array [
          false,
        ],
        "currentBet": 5,
        "doubledDown": Array [
          false,
        ],
        "handIndex": 0,
        "hands": Array [
          Array [],
        ],
        "hasBlackjack": Array [
          false,
        ],
        "hasInsurance": Array [
          false,
        ],
        "name": "Player1",
        "playerIndex": 1,
        "playerStands": Array [
          false,
        ],
        "score": Array [
          0,
        ],
        "splitHand": false,
        "status": Array [
          null,
        ],
      },
      "setAvatar": [Function],
      "setBet": [Function],
      "setName": [Function],
      "setStatus": [Function],
      "splitOnClick": [Function],
      "standOnClick": [Function],
      "stop": [Function],
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      },
      "turn": Object {
        "errMsg": "",
        "error": false,
        "isPlaying": false,
        "numPlayers": 2,
        "playersTurn": 1,
      },
      "winBet": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "buyChips": [Function],
        "buyInsuranceOnClick": [Function],
        "clearHands": [Function],
        "dealOnClick": [Function],
        "dealer": Object {
          "avatar": "./images/dealer.png",
          "busted": false,
          "hand": Array [],
          "handFlipped": false,
          "hasBlackjack": false,
          "name": "Dealer",
          "score": 0,
        },
        "dealerTurn": [Function],
        "deck": Object {
          "deck": Array [],
          "drawnCard": null,
        },
        "doubleDownOnClick": [Function],
        "giveCard": [Function],
        "giveDealerCard": [Function],
        "hitOnClick": [Function],
        "keepDealing": [Function],
        "nextHand": [Function],
        "nextPlayer": [Function],
        "play": [Function],
        "player": Object {
          "avatar": "./images/default.png",
          "balance": 500,
          "busted": Array [
            false,
          ],
          "currentBet": 5,
          "doubledDown": Array [
            false,
          ],
          "handIndex": 0,
          "hands": Array [
            Array [],
          ],
          "hasBlackjack": Array [
            false,
          ],
          "hasInsurance": Array [
            false,
          ],
          "name": "Player1",
          "playerIndex": 1,
          "playerStands": Array [
            false,
          ],
          "score": Array [
            0,
          ],
          "splitHand": false,
          "status": Array [
            null,
          ],
        },
        "setAvatar": [Function],
        "setBet": [Function],
        "setName": [Function],
        "setStatus": [Function],
        "splitOnClick": [Function],
        "standOnClick": [Function],
        "stop": [Function],
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": [Function],
        },
        "turn": Object {
          "errMsg": "",
          "error": false,
          "isPlaying": false,
          "numPlayers": 2,
          "playersTurn": 1,
        },
        "winBet": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): Object {
    "storeSubscription": undefined,
  },
}
`;
